---
networks:
  frontend:
    external: true

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./config:/config
      - prometheus-data:/prometheus
    restart: unless-stopped
    command:
      - "--config.file=/config/prometheus.yml"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=Host(`example.com`) && PathPrefix(`/prometheus/`)"
      - "traefik.http.middlewares.prometheus_pathstrip.stripprefix.prefixes=/prometheus"
      - "traefik.http.routers.prometheus.middlewares=prometheus_pathstrip@docker"
      - "traefik.http.routers.prometheus.entrypoints=websecure"
      - "traefik.http.routers.prometheus.service=prometheus"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.http.routers.prometheus.tls=true"
      - "traefik.http.routers.prometheus.tls.certresolver=leresolver"
    networks:
      - frontend

  grafana:
    image: grafana/grafana
    container_name: grafana
    depends_on:
      - prometheus
    environment:
      GF_INSTALL_PLUGINS: grafana-piechart-panel

    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana.ini:/etc/grafana/grafana.ini
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=Host(`ictcell.buet.ac.bd`) && PathPrefix(`/grafana/`)"
      - "traefik.http.middlewares.grafana_pathstrip.stripprefix.prefixes=/grafana"
      - "traefik.http.routers.grafana.middlewares=grafana_pathstrip@docker"
      - "traefik.http.routers.grafana.entrypoints=websecure"
      - "traefik.http.routers.grafana.service=grafana"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.http.routers.grafana.tls=true"
      - "traefik.http.routers.grafana.tls.certresolver=leresolver"
    networks:
      - frontend

  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command: "--path.rootfs=/host"
    pid: host
    ports:
      - "9100:9100"
    restart: unless-stopped
    volumes:
      - /:/host:ro,rslave
    networks:
      - frontend

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080" # Ensuring consistent quotation for ports
    volumes:
      - "/:/rootfs:ro"
      - "/run:/run:ro"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
      - "/dev/disk/:/dev/disk:ro"
    devices:
      - "/dev/kmsg"
    restart: unless-stopped
    networks:
      - frontend
